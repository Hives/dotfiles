#! /usr/bin/env bash

SCRIPTNAME=$(basename $0)

git rev-parse --git-dir > /dev/null 2>&1
if [[ $? != 0 ]]; then
    echo "${SCRIPTNAME}: couldn't find a git repo"
    exit 1
fi

REMOTE_ORIGIN_URL=$(git config --get remote.origin.url)

if [[ $REMOTE_ORIGIN_URL =~ http* ]]; then
    HTTP_SED_FILTER="s/^\(.*\)\.git$/\1/p"
    
    URL=$(echo "${REMOTE_ORIGIN_URL}" | sed -n "${HTTP_SED_FILTER}")
else
    # https://stackoverflow.com/a/36798723/1107844
    SSH_SED_FILTER="s/^.*:\(.*\)\.git$/\1/p"
    
    URL_FRAGMENT=$(echo "${REMOTE_ORIGIN_URL}" | sed -n "${SSH_SED_FILTER}")

    if [[ $REMOTE_ORIGIN_URL =~ "@gitlab" ]]; then
        PREFIX="https://gitlab.com"
    elif [[ $REMOTE_ORIGIN_URL =~ "@github" ]]; then
        PREFIX="https://github.com"
    else
        echo "${SCRIPTNAME}: couldn't parse remote origin ${REMOTE_ORIGIN_URL}"
        exit 1
    fi

    URL="${PREFIX}/${URL_FRAGMENT}"
fi

_browse() {
    xdg-open "${URL}"
}

_pipe() {
    xdg-open "${URL}/pipelines/latest"
}

_pipes() {
    xdg-open "${URL}/pipelines"
}

_commits() {
    xdg-open "${URL}/commits"
}

_url() {
    echo "${URL}"
}

if [[ $1 =~ ^(browse|pipe|pipes|commits|url)$ ]]; then
    COMMAND=_$1
    shift
    $COMMAND "$@"
else
    echo "Usage: ${SCRIPTNAME} [browse|pipe|pipes|commits|url]"
fi

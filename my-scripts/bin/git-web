#! /usr/bin/env bash

SCRIPTNAME=$(basename $0)

git rev-parse --git-dir > /dev/null 2>&1
if [[ $? != 0 ]]; then
    echo "${SCRIPTNAME}: couldn't find a git repo"
    exit 1
fi

REMOTE_ORIGIN_URL=$(git config --get remote.origin.url)

# https://stackoverflow.com/a/36798723/1107844
SED_FILTER="s/^.*:\(.*\)\.git$/\1/p"

URL_FRAGMENT=$(echo "${REMOTE_ORIGIN_URL}" | sed -n "${SED_FILTER}")

if [[ $REMOTE_ORIGIN_URL =~ "gitlab" ]]; then
    PREFIX="https://gitlab.com"
elif [[ $REMOTE_ORIGIN_URL =~ "github" ]]; then
    PREFIX="https://github.com"
else
    echo "${SCRIPTNAME}: Couldn't work out site for ${REMOTE_ORIGIN_URL}"
    exit 1
fi

_browse() {
    xdg-open "${PREFIX}/${URL_FRAGMENT}"
}

_pipe() {
    xdg-open "${PREFIX}/${URL_FRAGMENT}/pipelines/latest"
}

_pipes() {
    xdg-open "${PREFIX}/${URL_FRAGMENT}/pipelines"
}

_commits() {
    xdg-open "${PREFIX}/${URL_FRAGMENT}/commits"
}

_url() {
    echo "${URL_FRAGMENT}"
}

if [[ $1 =~ ^(browse|pipe|pipes|commits|url)$ ]]; then
    COMMAND=_$1
    shift
    $COMMAND "$@"
else
    echo "syntax is: '${SCRIPTNAME} [browse|pipe|pipes|commits|url]'"
fi

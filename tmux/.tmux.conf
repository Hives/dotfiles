# got most of this from greg hurrell
# https://github.com/wincent/wincent/blob/aa3a322e3a911dabe0ef398ebb1fd7c77209b8ac/roles/dotfiles/files/.tmux.conf

# Set prefix to space
unbind C-b
set -g prefix C-Space

# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# Resizing (mouse also works).
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# Fast toggle (normally prefix-l).
bind ^space last-window

# Intuitive window-splitting keys.
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind \\ split-window -h -c '#{pane_current_path}' # normally prefix-%
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"

# Status bar.
# set -g status-bg '#343d46'
# set -g status-style 'bg=#373b41,fg=white,bold,italics'
set -g status-bg black
set -g status-fg brightmagenta
set -g status-left-length 40
set -g status-left '#[fg=yellow]#S '
set -g status-right "#[fg=yellow]$USER@#h #[fg=magenta]%l:%M %p"
set -g status-interval 60 # Default is 15.

# Highlight active window.
set -w -g window-status-current-style bg=brightmagenta,fg=black

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys` and `tmux
# list-keys -t vi-copy`.
set -g mouse on

# Restore pre-2.1 behavior of scrolling with the scrollwheel in Vim, less, copy
# mode etc, otherwise entering copy mode if not already in it.
#
#   if in copy mode (pane_in_mode) || using the mouse already (mouse_any_flag)
#     pass through mouse events to current pane (send -Mt=)
#   elsif in alternate screen mode
#     send `Up` key
#   else
#     enter copy mode (-e exits if we scroll to the bottom)
#   end
#
bind-key -T root WheelUpPane \
  if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}" "send -t= Up" "copy-mode -et="'
bind-key -T root WheelDownPane \
  if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}"  "send -t= Down" "send -Mt="'

# Stay in copy mode on drag end.
unbind-key -T copy-mode-vi MouseDragEnd1Pane
unbind-key -T copy-mode MouseDragEnd1Pane

# tmux copy copies to X clipboard
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"
bind-key -T copy-mode Enter send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

# remove the delay when returning to normal in vim
set -sg escape-time 0

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Dynamically update iTerm tab and window titles.
set -g set-titles on

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set -g focus-events on

# But don't change tmux's own window titles.
set -w -g automatic-rename off

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
#
# (Would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting).
# set -g set-titles-string "#T : #h > #S > #W"
set -g set-titles-string "#S > #W"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

set -g default-terminal "tmux"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
